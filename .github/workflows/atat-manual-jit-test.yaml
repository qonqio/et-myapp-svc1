name: AT-AT-Manual-Terraform-Apply

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to run against"
        type: environment
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  terraform-apply:
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.event.inputs.environment }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: refs/tags/v1.0.0

      - name: Generate unique app name
        id: generate_app_name
        run: echo "APP_NAME=${{ vars.APPLICATION_NAME }}-${GITHUB_RUN_ID}" >> $GITHUB_ENV

      - name: "Az CLI login"
        uses: azure/login@v1
        with:
          client-id: ${{ vars.TERRAFORM_ARM_CLIENT_ID }}
          tenant-id: ${{ vars.ARM_TENANT_ID }}
          subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}

      - id: setup
        name: Setup `terraform`
        uses: hashicorp/setup-terraform@main
        with:
          terraform_version: ${{ vars.TERRAFORM_VERSION }}

      - id: validate
        name: Terraform Validate
        env:
          ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ vars.TERRAFORM_ARM_CLIENT_ID }}
          ARM_USE_OIDC: true
          TF_VAR_application_name: ${{ env.APP_NAME }}
          TF_VAR_environment_name: ${{ vars.ENVIRONMENT_NAME }}
        working-directory: ${{ vars.TERRAFORM_WORKING_DIRECTORY }}
        run: |
          export ARM_OID_REQUEST_TOKEN=$ACTIONS_ID_TOKEN_REQUEST_TOKEN

          terraform init \
            -backend-config="resource_group_name=${{ vars.BACKEND_RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ vars.BACKEND_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ vars.BACKEND_STORAGE_STATE_CONTAINER_NAME }}" \
            -backend-config="key=${{ env.APP_NAME }}-${{ vars.ENVIRONMENT_NAME }}"
            
          terraform validate

      - id: apply
        name: Terraform Apply
        env:
          ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ vars.TERRAFORM_ARM_CLIENT_ID }}
          ARM_USE_OIDC: true
          TF_VAR_application_name: ${{ env.APP_NAME }}
          TF_VAR_environment_name: ${{ vars.ENVIRONMENT_NAME }}
        working-directory: ${{ vars.TERRAFORM_WORKING_DIRECTORY }}
        run: |
          export ARM_OID_REQUEST_TOKEN=$ACTIONS_ID_TOKEN_REQUEST_TOKEN

          terraform init \
            -backend-config="resource_group_name=${{ vars.BACKEND_RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ vars.BACKEND_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ vars.BACKEND_STORAGE_STATE_CONTAINER_NAME }}" \
            -backend-config="key=${{ env.APP_NAME }}-${{ vars.ENVIRONMENT_NAME }}"
            
          terraform apply -auto-approve
